
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.17.1
 * Query Engine version: 272a37d34178c2894197e17273bf937f25acdeac
 */
Prisma.prismaVersion = {
  client: "6.17.1",
  engine: "272a37d34178c2894197e17273bf937f25acdeac"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  password: 'password',
  firstName: 'firstName',
  lastName: 'lastName',
  phone: 'phone',
  avatar: 'avatar',
  isActive: 'isActive',
  isEmailVerified: 'isEmailVerified',
  emailVerificationToken: 'emailVerificationToken',
  passwordResetToken: 'passwordResetToken',
  passwordResetExpires: 'passwordResetExpires',
  lastLoginAt: 'lastLoginAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserProfileScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  bio: 'bio',
  preferences: 'preferences',
  timezone: 'timezone',
  language: 'language',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RoleScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  permissions: 'permissions',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserRoleScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  roleId: 'roleId',
  assignedBy: 'assignedBy',
  assignedAt: 'assignedAt'
};

exports.Prisma.UserSessionScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  token: 'token',
  refreshToken: 'refreshToken',
  userAgent: 'userAgent',
  ipAddress: 'ipAddress',
  isActive: 'isActive',
  expiresAt: 'expiresAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ActivityLogScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  action: 'action',
  resource: 'resource',
  resourceId: 'resourceId',
  metadata: 'metadata',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  createdAt: 'createdAt'
};

exports.Prisma.RestaurantScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  address: 'address',
  city: 'city',
  state: 'state',
  postalCode: 'postalCode',
  country: 'country',
  phone: 'phone',
  email: 'email',
  website: 'website',
  logo: 'logo',
  timezone: 'timezone',
  currency: 'currency',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.OperatingHourScalarFieldEnum = {
  id: 'id',
  restaurantId: 'restaurantId',
  dayOfWeek: 'dayOfWeek',
  openTime: 'openTime',
  closeTime: 'closeTime',
  isClosed: 'isClosed',
  isSpecialDay: 'isSpecialDay',
  specialDate: 'specialDate',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RestaurantSettingsScalarFieldEnum = {
  id: 'id',
  restaurantId: 'restaurantId',
  language: 'language',
  dateFormat: 'dateFormat',
  timeFormat: 'timeFormat',
  defaultReservationDuration: 'defaultReservationDuration',
  maxAdvanceBookingDays: 'maxAdvanceBookingDays',
  minAdvanceBookingHours: 'minAdvanceBookingHours',
  maxPartySize: 'maxPartySize',
  enableOnlineBookings: 'enableOnlineBookings',
  enableWaitlist: 'enableWaitlist',
  confirmationEmailEnabled: 'confirmationEmailEnabled',
  reminderEmailEnabled: 'reminderEmailEnabled',
  reminderEmailHoursBefore: 'reminderEmailHoursBefore',
  cancellationEmailEnabled: 'cancellationEmailEnabled',
  autoCancelNoShowMinutes: 'autoCancelNoShowMinutes',
  emailNotifications: 'emailNotifications',
  smsNotifications: 'smsNotifications',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.BusinessRuleScalarFieldEnum = {
  id: 'id',
  restaurantId: 'restaurantId',
  name: 'name',
  description: 'description',
  ruleType: 'ruleType',
  conditions: 'conditions',
  actions: 'actions',
  isActive: 'isActive',
  priority: 'priority',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AreaScalarFieldEnum = {
  id: 'id',
  restaurantId: 'restaurantId',
  name: 'name',
  description: 'description',
  maxCapacity: 'maxCapacity',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TableScalarFieldEnum = {
  id: 'id',
  areaId: 'areaId',
  number: 'number',
  capacity: 'capacity',
  minCapacity: 'minCapacity',
  positionX: 'positionX',
  positionY: 'positionY',
  width: 'width',
  height: 'height',
  shape: 'shape',
  isAccessible: 'isAccessible',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TableMaintenanceScalarFieldEnum = {
  id: 'id',
  tableId: 'tableId',
  reason: 'reason',
  scheduledStart: 'scheduledStart',
  scheduledEnd: 'scheduledEnd',
  actualStart: 'actualStart',
  actualEnd: 'actualEnd',
  status: 'status',
  notes: 'notes',
  createdById: 'createdById',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CustomerScalarFieldEnum = {
  id: 'id',
  firstName: 'firstName',
  lastName: 'lastName',
  email: 'email',
  phone: 'phone',
  address: 'address',
  city: 'city',
  postalCode: 'postalCode',
  country: 'country',
  dateOfBirth: 'dateOfBirth',
  preferences: 'preferences',
  notes: 'notes',
  isVip: 'isVip',
  isBlacklisted: 'isBlacklisted',
  blacklistReason: 'blacklistReason',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ReservationScalarFieldEnum = {
  id: 'id',
  customerId: 'customerId',
  tableId: 'tableId',
  areaId: 'areaId',
  date: 'date',
  startTime: 'startTime',
  endTime: 'endTime',
  partySize: 'partySize',
  status: 'status',
  specialRequests: 'specialRequests',
  occasion: 'occasion',
  source: 'source',
  notes: 'notes',
  depositAmount: 'depositAmount',
  depositPaid: 'depositPaid',
  isWaitlist: 'isWaitlist',
  createdById: 'createdById',
  updatedById: 'updatedById',
  confirmedAt: 'confirmedAt',
  seatedAt: 'seatedAt',
  completedAt: 'completedAt',
  cancelledAt: 'cancelledAt',
  cancellationReason: 'cancellationReason',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.WaitlistEntryScalarFieldEnum = {
  id: 'id',
  customerId: 'customerId',
  restaurantId: 'restaurantId',
  date: 'date',
  partySize: 'partySize',
  preferredTime: 'preferredTime',
  areaId: 'areaId',
  specialRequests: 'specialRequests',
  status: 'status',
  priority: 'priority',
  offeredAt: 'offeredAt',
  expiresAt: 'expiresAt',
  notes: 'notes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ReservationNotificationScalarFieldEnum = {
  id: 'id',
  reservationId: 'reservationId',
  type: 'type',
  channel: 'channel',
  recipient: 'recipient',
  subject: 'subject',
  content: 'content',
  status: 'status',
  sentAt: 'sentAt',
  error: 'error',
  retryCount: 'retryCount',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};


exports.Prisma.ModelName = {
  User: 'User',
  UserProfile: 'UserProfile',
  Role: 'Role',
  UserRole: 'UserRole',
  UserSession: 'UserSession',
  ActivityLog: 'ActivityLog',
  Restaurant: 'Restaurant',
  OperatingHour: 'OperatingHour',
  RestaurantSettings: 'RestaurantSettings',
  BusinessRule: 'BusinessRule',
  Area: 'Area',
  Table: 'Table',
  TableMaintenance: 'TableMaintenance',
  Customer: 'Customer',
  Reservation: 'Reservation',
  WaitlistEntry: 'WaitlistEntry',
  ReservationNotification: 'ReservationNotification'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "c:\\Users\\Victor\\Desktop\\CRM NEW\\src\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "c:\\Users\\Victor\\Desktop\\CRM NEW\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": "../../../.env",
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.17.1",
  "engineVersion": "272a37d34178c2894197e17273bf937f25acdeac",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../src/generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\n// User and Authentication Models\nmodel User {\n  id                     String    @id @default(cuid())\n  email                  String    @unique\n  password               String\n  firstName              String\n  lastName               String\n  phone                  String?\n  avatar                 String?\n  isActive               Boolean   @default(true)\n  isEmailVerified        Boolean   @default(false)\n  emailVerificationToken String?\n  passwordResetToken     String?\n  passwordResetExpires   DateTime?\n  lastLoginAt            DateTime?\n  createdAt              DateTime  @default(now())\n  updatedAt              DateTime  @updatedAt\n\n  // Relations\n  profile             UserProfile?\n  roles               UserRole[]\n  sessions            UserSession[]\n  activityLogs        ActivityLog[]\n  createdReservations Reservation[]      @relation(\"CreatedBy\")\n  updatedReservations Reservation[]      @relation(\"UpdatedBy\")\n  maintenanceRecords  TableMaintenance[] @relation(\"MaintenanceCreatedBy\")\n\n  @@map(\"users\")\n}\n\nmodel UserProfile {\n  id          String   @id @default(cuid())\n  userId      String   @unique\n  bio         String?\n  preferences Json? // Store user preferences as JSON\n  timezone    String   @default(\"Europe/Madrid\")\n  language    String   @default(\"es\")\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n\n  // Relations\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"user_profiles\")\n}\n\nmodel Role {\n  id          String   @id @default(cuid())\n  name        String   @unique\n  description String?\n  permissions Json // Store permissions as JSON\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n\n  // Relations\n  users UserRole[]\n\n  @@map(\"roles\")\n}\n\nmodel UserRole {\n  id         String   @id @default(cuid())\n  userId     String\n  roleId     String\n  assignedBy String?\n  assignedAt DateTime @default(now())\n\n  // Relations\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n  role Role @relation(fields: [roleId], references: [id], onDelete: Cascade)\n\n  @@unique([userId, roleId])\n  @@map(\"user_roles\")\n}\n\nmodel UserSession {\n  id           String   @id @default(cuid())\n  userId       String\n  token        String   @unique\n  refreshToken String?  @unique\n  userAgent    String?\n  ipAddress    String?\n  isActive     Boolean  @default(true)\n  expiresAt    DateTime\n  createdAt    DateTime @default(now())\n  updatedAt    DateTime @updatedAt\n\n  // Relations\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"user_sessions\")\n}\n\nmodel ActivityLog {\n  id         String   @id @default(cuid())\n  userId     String?\n  action     String\n  resource   String?\n  resourceId String?\n  metadata   Json? // Store additional metadata\n  ipAddress  String?\n  userAgent  String?\n  createdAt  DateTime @default(now())\n\n  // Relations\n  user User? @relation(fields: [userId], references: [id], onDelete: SetNull)\n\n  @@map(\"activity_logs\")\n}\n\n// Restaurant Management Models\nmodel Restaurant {\n  id          String   @id @default(cuid())\n  name        String\n  description String?\n  address     String\n  city        String\n  state       String?\n  postalCode  String?\n  country     String   @default(\"Spain\")\n  phone       String\n  email       String\n  website     String?\n  logo        String?\n  timezone    String   @default(\"Europe/Madrid\")\n  currency    String   @default(\"EUR\")\n  isActive    Boolean  @default(true)\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n\n  // Relations\n  operatingHours OperatingHour[]\n  areas          Area[]\n  settings       RestaurantSettings?\n  businessRules  BusinessRule[]\n\n  @@map(\"restaurants\")\n}\n\nmodel OperatingHour {\n  id           String    @id @default(cuid())\n  restaurantId String\n  dayOfWeek    Int // 0 = Sunday, 1 = Monday, etc.\n  openTime     String // Format: \"HH:MM\"\n  closeTime    String // Format: \"HH:MM\"\n  isClosed     Boolean   @default(false)\n  isSpecialDay Boolean   @default(false)\n  specialDate  DateTime? // For special holidays/events\n  createdAt    DateTime  @default(now())\n  updatedAt    DateTime  @updatedAt\n\n  // Relations\n  restaurant Restaurant @relation(fields: [restaurantId], references: [id], onDelete: Cascade)\n\n  @@unique([restaurantId, dayOfWeek, specialDate])\n  @@map(\"operating_hours\")\n}\n\nmodel RestaurantSettings {\n  id                         String   @id @default(cuid())\n  restaurantId               String   @unique\n  language                   String   @default(\"es\")\n  dateFormat                 String   @default(\"DD/MM/YYYY\")\n  timeFormat                 String   @default(\"24h\")\n  defaultReservationDuration Int      @default(120) // in minutes\n  maxAdvanceBookingDays      Int      @default(30)\n  minAdvanceBookingHours     Int      @default(2)\n  maxPartySize               Int      @default(20)\n  enableOnlineBookings       Boolean  @default(true)\n  enableWaitlist             Boolean  @default(true)\n  confirmationEmailEnabled   Boolean  @default(true)\n  reminderEmailEnabled       Boolean  @default(true)\n  reminderEmailHoursBefore   Int      @default(24)\n  cancellationEmailEnabled   Boolean  @default(true)\n  autoCancelNoShowMinutes    Int      @default(15)\n  emailNotifications         Json? // Store email notification settings\n  smsNotifications           Json? // Store SMS notification settings\n  createdAt                  DateTime @default(now())\n  updatedAt                  DateTime @updatedAt\n\n  // Relations\n  restaurant Restaurant @relation(fields: [restaurantId], references: [id], onDelete: Cascade)\n\n  @@map(\"restaurant_settings\")\n}\n\nmodel BusinessRule {\n  id           String   @id @default(cuid())\n  restaurantId String\n  name         String\n  description  String?\n  ruleType     String // e.g., \"CANCELLATION_POLICY\", \"NO_SHOW_POLICY\", \"BOOKING_LIMITS\"\n  conditions   Json // Store rule conditions as JSON\n  actions      Json // Store rule actions as JSON\n  isActive     Boolean  @default(true)\n  priority     Int      @default(0)\n  createdAt    DateTime @default(now())\n  updatedAt    DateTime @updatedAt\n\n  // Relations\n  restaurant Restaurant @relation(fields: [restaurantId], references: [id], onDelete: Cascade)\n\n  @@map(\"business_rules\")\n}\n\n// Table Management Models\nmodel Area {\n  id           String   @id @default(cuid())\n  restaurantId String\n  name         String\n  description  String?\n  maxCapacity  Int\n  isActive     Boolean  @default(true)\n  createdAt    DateTime @default(now())\n  updatedAt    DateTime @updatedAt\n\n  // Relations\n  restaurant      Restaurant      @relation(fields: [restaurantId], references: [id], onDelete: Cascade)\n  tables          Table[]\n  waitlistEntries WaitlistEntry[]\n\n  @@map(\"areas\")\n}\n\nmodel Table {\n  id           String   @id @default(cuid())\n  areaId       String\n  number       String\n  capacity     Int\n  minCapacity  Int      @default(1)\n  positionX    Float? // For layout visualization\n  positionY    Float? // For layout visualization\n  width        Float? // For layout visualization\n  height       Float? // For layout visualization\n  shape        String? // For layout visualization (e.g., \"rectangle\", \"circle\")\n  isAccessible Boolean  @default(false)\n  isActive     Boolean  @default(true)\n  createdAt    DateTime @default(now())\n  updatedAt    DateTime @updatedAt\n\n  // Relations\n  area               Area               @relation(fields: [areaId], references: [id], onDelete: Cascade)\n  reservations       Reservation[]\n  maintenanceRecords TableMaintenance[]\n\n  @@unique([areaId, number])\n  @@map(\"tables\")\n}\n\nmodel TableMaintenance {\n  id             String    @id @default(cuid())\n  tableId        String\n  reason         String\n  scheduledStart DateTime\n  scheduledEnd   DateTime\n  actualStart    DateTime?\n  actualEnd      DateTime?\n  status         String // \"scheduled\", \"in_progress\", \"completed\", \"cancelled\"\n  notes          String?\n  createdById    String?\n  createdAt      DateTime  @default(now())\n  updatedAt      DateTime  @updatedAt\n\n  // Relations\n  table     Table @relation(fields: [tableId], references: [id], onDelete: Cascade)\n  createdBy User? @relation(\"MaintenanceCreatedBy\", fields: [createdById], references: [id])\n\n  @@map(\"table_maintenance\")\n}\n\n// Reservation System Models\nmodel Customer {\n  id              String    @id @default(cuid())\n  firstName       String\n  lastName        String\n  email           String\n  phone           String?\n  address         String?\n  city            String?\n  postalCode      String?\n  country         String?\n  dateOfBirth     DateTime?\n  preferences     Json? // Store customer preferences\n  notes           String?\n  isVip           Boolean   @default(false)\n  isBlacklisted   Boolean   @default(false)\n  blacklistReason String?\n  createdAt       DateTime  @default(now())\n  updatedAt       DateTime  @updatedAt\n\n  // Relations\n  reservations    Reservation[]\n  waitlistEntries WaitlistEntry[]\n\n  @@unique([email])\n  @@map(\"customers\")\n}\n\nmodel Reservation {\n  id                 String    @id @default(cuid())\n  customerId         String\n  tableId            String?\n  areaId             String?\n  date               DateTime\n  startTime          DateTime\n  endTime            DateTime\n  partySize          Int\n  status             String    @default(\"pending\") // pending, confirmed, seated, completed, cancelled, no_show\n  specialRequests    String?\n  occasion           String? // e.g., \"birthday\", \"anniversary\", \"business\"\n  source             String    @default(\"manual\") // manual, online, phone, walk_in\n  notes              String?\n  depositAmount      Float?\n  depositPaid        Boolean   @default(false)\n  isWaitlist         Boolean   @default(false)\n  createdById        String?\n  updatedById        String?\n  confirmedAt        DateTime?\n  seatedAt           DateTime?\n  completedAt        DateTime?\n  cancelledAt        DateTime?\n  cancellationReason String?\n  createdAt          DateTime  @default(now())\n  updatedAt          DateTime  @updatedAt\n\n  // Relations\n  customer      Customer                  @relation(fields: [customerId], references: [id], onDelete: Cascade)\n  table         Table?                    @relation(fields: [tableId], references: [id], onDelete: SetNull)\n  createdBy     User?                     @relation(\"CreatedBy\", fields: [createdById], references: [id])\n  updatedBy     User?                     @relation(\"UpdatedBy\", fields: [updatedById], references: [id])\n  notifications ReservationNotification[]\n\n  @@map(\"reservations\")\n}\n\nmodel WaitlistEntry {\n  id              String    @id @default(cuid())\n  customerId      String\n  restaurantId    String\n  date            DateTime\n  partySize       Int\n  preferredTime   String? // Format: \"HH:MM\"\n  areaId          String?\n  specialRequests String?\n  status          String    @default(\"waiting\") // waiting, offered, declined, expired\n  priority        Int       @default(0)\n  offeredAt       DateTime?\n  expiresAt       DateTime\n  notes           String?\n  createdAt       DateTime  @default(now())\n  updatedAt       DateTime  @updatedAt\n\n  // Relations\n  customer Customer @relation(fields: [customerId], references: [id], onDelete: Cascade)\n  area     Area?    @relation(fields: [areaId], references: [id], onDelete: SetNull)\n\n  @@map(\"waitlist_entries\")\n}\n\nmodel ReservationNotification {\n  id            String    @id @default(cuid())\n  reservationId String\n  type          String // confirmation, reminder, cancellation, etc.\n  channel       String // email, sms, push\n  recipient     String\n  subject       String?\n  content       String\n  status        String    @default(\"pending\") // pending, sent, failed\n  sentAt        DateTime?\n  error         String?\n  retryCount    Int       @default(0)\n  createdAt     DateTime  @default(now())\n  updatedAt     DateTime  @updatedAt\n\n  // Relations\n  reservation Reservation @relation(fields: [reservationId], references: [id], onDelete: Cascade)\n\n  @@map(\"reservation_notifications\")\n}\n",
  "inlineSchemaHash": "f90aad515b502607505c0e835a00e2d5171f8069d470b1a277ab71390daa84f6",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"avatar\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isEmailVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"emailVerificationToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"passwordResetToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"passwordResetExpires\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"lastLoginAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"profile\",\"kind\":\"object\",\"type\":\"UserProfile\",\"relationName\":\"UserToUserProfile\"},{\"name\":\"roles\",\"kind\":\"object\",\"type\":\"UserRole\",\"relationName\":\"UserToUserRole\"},{\"name\":\"sessions\",\"kind\":\"object\",\"type\":\"UserSession\",\"relationName\":\"UserToUserSession\"},{\"name\":\"activityLogs\",\"kind\":\"object\",\"type\":\"ActivityLog\",\"relationName\":\"ActivityLogToUser\"},{\"name\":\"createdReservations\",\"kind\":\"object\",\"type\":\"Reservation\",\"relationName\":\"CreatedBy\"},{\"name\":\"updatedReservations\",\"kind\":\"object\",\"type\":\"Reservation\",\"relationName\":\"UpdatedBy\"},{\"name\":\"maintenanceRecords\",\"kind\":\"object\",\"type\":\"TableMaintenance\",\"relationName\":\"MaintenanceCreatedBy\"}],\"dbName\":\"users\"},\"UserProfile\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bio\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"preferences\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"timezone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"language\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserProfile\"}],\"dbName\":\"user_profiles\"},\"Role\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"permissions\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"UserRole\",\"relationName\":\"RoleToUserRole\"}],\"dbName\":\"roles\"},\"UserRole\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"roleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"assignedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"assignedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserRole\"},{\"name\":\"role\",\"kind\":\"object\",\"type\":\"Role\",\"relationName\":\"RoleToUserRole\"}],\"dbName\":\"user_roles\"},\"UserSession\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"refreshToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserSession\"}],\"dbName\":\"user_sessions\"},\"ActivityLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"action\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"resource\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"resourceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ActivityLogToUser\"}],\"dbName\":\"activity_logs\"},\"Restaurant\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"city\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"state\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"postalCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"country\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"website\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"logo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"timezone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"operatingHours\",\"kind\":\"object\",\"type\":\"OperatingHour\",\"relationName\":\"OperatingHourToRestaurant\"},{\"name\":\"areas\",\"kind\":\"object\",\"type\":\"Area\",\"relationName\":\"AreaToRestaurant\"},{\"name\":\"settings\",\"kind\":\"object\",\"type\":\"RestaurantSettings\",\"relationName\":\"RestaurantToRestaurantSettings\"},{\"name\":\"businessRules\",\"kind\":\"object\",\"type\":\"BusinessRule\",\"relationName\":\"BusinessRuleToRestaurant\"}],\"dbName\":\"restaurants\"},\"OperatingHour\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"restaurantId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dayOfWeek\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"openTime\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"closeTime\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isClosed\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isSpecialDay\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"specialDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"restaurant\",\"kind\":\"object\",\"type\":\"Restaurant\",\"relationName\":\"OperatingHourToRestaurant\"}],\"dbName\":\"operating_hours\"},\"RestaurantSettings\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"restaurantId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"language\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dateFormat\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"timeFormat\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"defaultReservationDuration\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"maxAdvanceBookingDays\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"minAdvanceBookingHours\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"maxPartySize\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"enableOnlineBookings\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"enableWaitlist\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"confirmationEmailEnabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"reminderEmailEnabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"reminderEmailHoursBefore\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"cancellationEmailEnabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"autoCancelNoShowMinutes\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"emailNotifications\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"smsNotifications\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"restaurant\",\"kind\":\"object\",\"type\":\"Restaurant\",\"relationName\":\"RestaurantToRestaurantSettings\"}],\"dbName\":\"restaurant_settings\"},\"BusinessRule\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"restaurantId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ruleType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"conditions\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"actions\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"priority\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"restaurant\",\"kind\":\"object\",\"type\":\"Restaurant\",\"relationName\":\"BusinessRuleToRestaurant\"}],\"dbName\":\"business_rules\"},\"Area\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"restaurantId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"maxCapacity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"restaurant\",\"kind\":\"object\",\"type\":\"Restaurant\",\"relationName\":\"AreaToRestaurant\"},{\"name\":\"tables\",\"kind\":\"object\",\"type\":\"Table\",\"relationName\":\"AreaToTable\"},{\"name\":\"waitlistEntries\",\"kind\":\"object\",\"type\":\"WaitlistEntry\",\"relationName\":\"AreaToWaitlistEntry\"}],\"dbName\":\"areas\"},\"Table\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"areaId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"number\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"capacity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"minCapacity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"positionX\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"positionY\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"width\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"height\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"shape\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isAccessible\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"area\",\"kind\":\"object\",\"type\":\"Area\",\"relationName\":\"AreaToTable\"},{\"name\":\"reservations\",\"kind\":\"object\",\"type\":\"Reservation\",\"relationName\":\"ReservationToTable\"},{\"name\":\"maintenanceRecords\",\"kind\":\"object\",\"type\":\"TableMaintenance\",\"relationName\":\"TableToTableMaintenance\"}],\"dbName\":\"tables\"},\"TableMaintenance\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tableId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"scheduledStart\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"scheduledEnd\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"actualStart\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"actualEnd\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdById\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"table\",\"kind\":\"object\",\"type\":\"Table\",\"relationName\":\"TableToTableMaintenance\"},{\"name\":\"createdBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"MaintenanceCreatedBy\"}],\"dbName\":\"table_maintenance\"},\"Customer\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"city\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"postalCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"country\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dateOfBirth\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"preferences\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isVip\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isBlacklisted\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"blacklistReason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"reservations\",\"kind\":\"object\",\"type\":\"Reservation\",\"relationName\":\"CustomerToReservation\"},{\"name\":\"waitlistEntries\",\"kind\":\"object\",\"type\":\"WaitlistEntry\",\"relationName\":\"CustomerToWaitlistEntry\"}],\"dbName\":\"customers\"},\"Reservation\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tableId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"areaId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"startTime\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endTime\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"partySize\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"specialRequests\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"occasion\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"source\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"depositAmount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"depositPaid\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isWaitlist\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdById\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"updatedById\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"confirmedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"seatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"completedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"cancelledAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"cancellationReason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"customer\",\"kind\":\"object\",\"type\":\"Customer\",\"relationName\":\"CustomerToReservation\"},{\"name\":\"table\",\"kind\":\"object\",\"type\":\"Table\",\"relationName\":\"ReservationToTable\"},{\"name\":\"createdBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CreatedBy\"},{\"name\":\"updatedBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UpdatedBy\"},{\"name\":\"notifications\",\"kind\":\"object\",\"type\":\"ReservationNotification\",\"relationName\":\"ReservationToReservationNotification\"}],\"dbName\":\"reservations\"},\"WaitlistEntry\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"restaurantId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"partySize\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"preferredTime\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"areaId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"specialRequests\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"priority\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"offeredAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"customer\",\"kind\":\"object\",\"type\":\"Customer\",\"relationName\":\"CustomerToWaitlistEntry\"},{\"name\":\"area\",\"kind\":\"object\",\"type\":\"Area\",\"relationName\":\"AreaToWaitlistEntry\"}],\"dbName\":\"waitlist_entries\"},\"ReservationNotification\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reservationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"channel\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"recipient\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"subject\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sentAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"error\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"retryCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"reservation\",\"kind\":\"object\",\"type\":\"Reservation\",\"relationName\":\"ReservationToReservationNotification\"}],\"dbName\":\"reservation_notifications\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

